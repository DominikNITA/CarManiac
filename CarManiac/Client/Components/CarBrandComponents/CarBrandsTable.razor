@using CarManiac.Client.Components.Shared
@inject HttpClient Http
@inject IJSRuntime Js
@inject NavigationManager NavigationManager

<TableTemplate Items="@CarBrands">
    <TableHeader>
        <th>Name</th>
        <th>Country</th>
        <th>Creation Year</th>
        <th></th>
    </TableHeader>
    <RowTemplate Context="carBrand">
        <td>@carBrand.Name</td>
        <td>@carBrand.Country</td>
        <td>@carBrand.CreationYear</td>
        <td>
            <a class="btn btn-success" href="carbrand/edit/@carBrand.Id/@NavigationManager.ToBaseRelativePath(NavigationManager.Uri)">Edit</a>
            <button class="btn btn-danger" @onclick="@(()=> Delete(carBrand.Id))">Delete</button>
        </td>
    </RowTemplate>
</TableTemplate>

@code {
    [Parameter] public List<CarBrand> CarBrands { get; set; }
    [Parameter] public EventCallback OnCarBrandDeleted { get; set; }

    private async Task Delete(int id)
    {
        var carBrandToDelete = CarBrands.First(brand => brand.Id == id);
        if (await Js.InvokeAsync<bool>("confirm", new object[] { $"Do you want to delete {carBrandToDelete.Name}?" }))
        {
            await Http.DeleteAsync($"api/CarBrands/{id}");
            await OnCarBrandDeleted.InvokeAsync();
        }
    }
}
